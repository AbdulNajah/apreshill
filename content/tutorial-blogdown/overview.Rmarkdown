---
title: "Overview (tl;dr)"

date: 2019-05-01T00:00:00.000Z
lastmod: 2019-05-01T00:00:00.000Z

draft: false # Is this a draft? true/false
toc: true # Show table of contents? true/false
type: docs # Do not modify.

# Add menu entry to sidebar.
linktitle: "Overview (tl;dr)"
menu:
  tutorial-blogdown:
    parent: "Up & running with blogdown"
    weight: 1
---

```{r, echo = FALSE, warning = FALSE, message = FALSE}
dev.off <- function(){
  invisible(grDevices::dev.off())
}

library(fs)
library(magick)
library(tidyverse)

blogdown_png <- dir_ls(path = here::here("static", "img", "tutorials"),
                 regexp = "blogdown-signpost-\\d.png")

blogdown_gif <- blogdown_png %>% 
  map(image_read) %>% # reads each path file
  image_join() %>% # joins image
  image_scale("1000") %>% 
  image_animate(fps = 1) # animates, can opt for number of loops

blogdown_gif %>%  
  image_write(here::here("static", "img", "tutorials", "blogdown.gif")) # write the gif to file
```

![](/img/tutorials/blogdown.gif)

If you are comfortable working with R, RStudio, R projects (`.Rproj`), and GitHub (via RStudio), the steps listed below may be detailed enough for you to get up and running:

1. Create a GitHub repo

    + No `README`
    
    + No `.gitignore`

1. Create a new RStudio project by cloning the repo to a local directory

1. Install the `blogdown` R package via `install.packages("blogdown")`

1. Install Hugo via the `blogdown::install_hugo()` function

1. Create a site using a Hugo theme hosted on GitHub via `blogdown::new_site(theme = "user/repo", theme_example = TRUE, sample = TRUE)`

    + `theme_example` copies the theme's `exampleSite` folder (if it exists) into your project root directory so you can render the full example site. You can always delete the example content later, but I like to leave it to make sure the site renders "out of the box".
    
    + `sample` adds a sample R Markdown (`.Rmd`) blog post. Depending on a theme's file structure, this post may end up in a weird place within the `content/` folder.
    
1. If it doesn't automatically start, use the RStudio Addin to serve your site (renders first in the RStudio Viewer pane, i.e., where your R plots generally render; be sure to click on the teeny-tiny viewer pane and __"Show in new window"__ to view in your local browser)


All together now, once you are "in" your RStudio project that is linked to a remote GitHub repo, and using the [Hugo academic theme](https://sourcethemes.com/academic/) as an example:

```{r eval = FALSE}
install.packages("blogdown")
library(blogdown)
install_hugo()
new_site(theme = "gcushen/hugo-academic", theme_example = TRUE, sample = TRUE)
```


